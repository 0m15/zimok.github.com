// Generated by CoffeeScript 1.7.1
(function() {
  var GEOCODE_API_KEY, GEOCODE_BASE_URL, GEOCODE_URL, JSONStore, OUT, added, db, extend, fs, getGeodata, getResults, getStoresLocation, getUrl, makeRequest, request, requests, storeList, storesGeo;

  storeList = require("../assets/stores");

  request = require("superagent");

  fs = require("fs");

  JSONStore = require('json-store');

  extend = require('util')._extend;

  db = require("./store/stores.json");

  requests = [];

  OUT = "./storeGeo.json";

  GEOCODE_API_KEY = "AIzaSyDToCE_kRLo_41eqc4NEk2quNQS5JjG5Dk";

  GEOCODE_BASE_URL = "https://maps.googleapis.com/maps/api/geocode/json?key=" + GEOCODE_API_KEY;

  GEOCODE_URL = "&address=";

  added = 0;

  getUrl = function(address) {
    return "" + GEOCODE_BASE_URL + GEOCODE_URL + address;
  };

  makeRequest = function(url) {
    return request.get(url);
  };

  getGeodata = function(store, done, i) {
    var req, url;
    url = getUrl("" + store.address + " " + store.town);
    req = makeRequest(url);
    requests.push(req);
    return req.end(function(res) {
      var data, geo;
      added += 1;
      data = JSON.parse(res.text);
      if (data.status === "OK") {
        geo = getResults(data.results[0]);
        return done(store, geo, i);
      }
    });
  };

  getResults = function(data) {
    return {
      lat: data.geometry.location.lat,
      lng: data.geometry.location.lng
    };
  };

  storesGeo = [];

  getStoresLocation = function() {
    var geo, i, onDone, store, _i, _len, _results;
    onDone = function(store, data, i) {
      var _store;
      if (typeof data === 'object') {
        _store = extend(store, {});
        _store.coords = {
          lat: data.lat,
          lng: data.lng
        };
        storesGeo.push(_store);
        console.log('adding', data);
        if (added >= storeList.length) {
          return fs.writeFile(OUT, JSON.stringify(storesGeo, null, 4), function(err) {
            if (err) {
              return console.log('error');
            } else {
              return console.log("JSON saved");
            }
          });
        }
      }
    };
    _results = [];
    for (i = _i = 0, _len = storeList.length; _i < _len; i = ++_i) {
      store = storeList[i];
      console.log(i);
      _results.push(geo = getGeodata(store, onDone, i));
    }
    return _results;
  };

  getStoresLocation();

  module.exports = getStoresLocation;

}).call(this);
