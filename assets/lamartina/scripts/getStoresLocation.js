// Generated by CoffeeScript 1.7.1
(function() {
  var GEOCODE_API_KEY, GEOCODE_BASE_URL, GEOCODE_URL, OUT, extend, fs, getGeodata, getResults, getStoresLocation, getUrl, makeRequest, request, storeList;

  storeList = require("../assets/stores");

  request = require("superagent");

  fs = require("fs");

  extend = require('util')._extend;

  OUT = "storeGeo.json";

  GEOCODE_API_KEY = "AIzaSyDToCE_kRLo_41eqc4NEk2quNQS5JjG5Dk";

  GEOCODE_BASE_URL = "https://maps.googleapis.com/maps/api/geocode/json?key=" + GEOCODE_API_KEY;

  GEOCODE_URL = "&address=";

  getUrl = function(address) {
    return "" + GEOCODE_BASE_URL + GEOCODE_URL + address;
  };

  makeRequest = function(url) {
    return request.get(url);
  };

  getGeodata = function(store, done) {
    var req, url;
    url = getUrl("" + store.address + " " + store.town);
    req = makeRequest(url);
    return req.end(function(res) {
      var data, geo;
      data = JSON.parse(res.text);
      if (data.status === "OK") {
        geo = getResults(data.results[0]);
        return done(geo);
      }
    });
  };

  getResults = function(data) {
    return {
      lat: data.geometry.location.lat,
      lng: data.geometry.location.lng
    };
  };

  getStoresLocation = function() {
    var geo, store, storesGeo, _i, _len, _results;
    storesGeo = [];
    _results = [];
    for (_i = 0, _len = storeList.length; _i < _len; _i++) {
      store = storeList[_i];
      _results.push(geo = getGeodata(store, function(data) {
        var _store;
        if (typeof data === 'object') {
          _store = extend(store, {});
          _store.coords = {
            lat: data.lat,
            lng: data.lng
          };
          storesGeo.push(_store);
          return fs.writeFile(OUT, JSON.stringify(storesGeo, null, 4), function(err) {
            if (err) {
              return console.log('error');
            } else {
              return console.log("JSON saved");
            }
          });
        }
      }));
    }
    return _results;
  };

  getStoresLocation();

  module.exports = getStoresLocation;

}).call(this);
